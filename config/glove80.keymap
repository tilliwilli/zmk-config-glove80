/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    quick-tap-ms = <175>;
    flavor = "balanced";
};

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;
};

&sk { quick-release; };

&sl { ignore-modifiers; };

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS LEFT RIGHT>; };

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 57 58 59 60 61 62 63 73 74 75 76 77 78 79 56 72 55 52 53 54 70 71 69>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <57 73 74 56 72 55 52 53 54 70 71 69 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 64 65 66 67 68 69 70>;
            hold-trigger-on-release;
        };

        comma_morph: comma_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_MORPH";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_morph: dot_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_MORPH";
            bindings = <&kp DOT>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        cmdhold: cmdhold {
            compatible = "zmk,behavior-hold-tap";
            label = "CMDHOLD";
            bindings = <&cmdtap>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };

        cmdsfthold: cmdsfthold {
            compatible = "zmk,behavior-hold-tap";
            label = "CMDSFTHOLD";
            bindings = <&cmdsfttap>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hypermo_kp: hypermo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HYPERMO_KP";
            bindings = <&hypermo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        hypermo_sk: hypermo_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "HYPERMO_SK";
            bindings = <&hypermo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        de_ae: de_ae {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_AE";
            bindings = <&de_ae_lower>, <&de_ae_upper>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        de_oe: de_oe {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_OE";
            bindings = <&de_oe_lower>, <&de_oe_upper>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        de_ue: de_ue {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_UE";
            bindings = <&de_ue_lower>, <&de_ue_upper>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        de_sz: de_sz {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_SZ";
            bindings = <&de_sz_lower>, <&de_sz_upper>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        hml_de_ae: hml_de_ae {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_DE_AE";
            bindings = <&kp>, <&de_ae>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 57 58 59 60 61 62 63 73 74 75 76 77 78 79 56 72 55 52 53 54 70 71 69>;
            hold-trigger-on-release;
        };

        hml_de_sz: hml_de_sz {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_DE_SZ";
            bindings = <&kp>, <&de_sz>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 57 58 59 60 61 62 63 73 74 75 76 77 78 79 56 72 55 52 53 54 70 71 69>;
            hold-trigger-on-release;
        };

        hmr_de_ue: hmr_de_ue {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_DE_UE";
            bindings = <&kp>, <&de_ue>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <57 73 74 56 72 55 52 53 54 70 71 69 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 64 65 66 67 68 69 70>;
            hold-trigger-on-release;
        };

        hmr_de_oe: hmr_de_oe {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_DE_OE";
            bindings = <&kp>, <&de_oe>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <57 73 74 56 72 55 52 53 54 70 71 69 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 64 65 66 67 68 69 70>;
            hold-trigger-on-release;
        };

        lpar_lt: lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_LT";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rpar_gt: rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_GT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ltw: ltw {
            compatible = "zmk,behavior-hold-tap";
            label = "LTW";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        htw: htw {
            compatible = "zmk,behavior-hold-tap";
            label = "HTW";
            bindings = <&tap>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        excl_skshft: excl_skshft {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_SKSHFT";
            bindings = <&sk LSHFT>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        question_skshft: question_skshft {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_SKSHFT";
            bindings = <&sk RSHFT>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        cmdtap: cmdtap {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LGUI>;

            label = "CMDTAP";
        };

        cmdsfttap: cmdsfttap {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT &kp LGUI>;

            label = "CMDSFTTAP";
        };

        hypermo: hypermo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LALT &kp LCTRL &kp LSHFT &macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>;

            label = "HYPERMO";
        };

        de_ae_lower: de_ae_lower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp E &kp N4>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_AE_LOWER";
        };

        de_ae_upper: de_ae_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp C &kp N4>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_AE_UPPER";
        };

        de_oe_lower: de_oe_lower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp F &kp N6>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_OE_LOWER";
        };

        de_oe_upper: de_oe_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp D &kp N6>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_OE_UPPER";
        };

        de_ue_lower: de_ue_lower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp F &kp C>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_UE_LOWER";
        };

        de_ue_upper: de_ue_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp D &kp C>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_UE_UPPER";
        };

        de_sz_lower: de_sz_lower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp D &kp F>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_SZ_LOWER";
        };

        de_sz_upper: de_sz_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N1 &kp E &kp N9 &kp E>,
                <&macro_release>,
                <&kp RALT>;

            label = "DE_SZ_UPPER";
        };

        tap: tap {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TAP";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_capsword {
            bindings = <&caps_word>;
            key-positions = <47 62>;
            layers = <0>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1         &kp F2            &kp F3       &kp F4        &kp F5                                                                                                         &kp F6       &kp F7        &kp F8       &kp F9             &kp F10
&kp F11        &kp N1            &kp N2       &kp N3        &kp N4       &kp N5                                                                                    &kp N6  &kp N7       &kp N8        &kp N9       &kp N0             &kp F12
&kp GRAVE      &kp LEFT_BRACKET  &kp W        &kp L         &kp D        &kp P                                                                                     &kp J   &kp M        &kp O         &kp Y        &kp RIGHT_BRACKET  &kp EQUAL
&de_sz         &hml LCTRL A      &hml LALT S  &hml LSHFT R  &hml LGUI T  &kp G                                                                                     &kp F   &hmr RGUI N  &hmr RSHFT E  &hmr RALT I  &hmr RCTRL U       &de_oe
&kp BACKSLASH  &excl_skshft      &kp Z        &kp K         &kp C        &kp V   &hypermo 4       &kp DOWN      &kp UP      &kp LEFT    &kp RIGHT     &kp TAB      &kp B   &kp H        &comma_morph  &dot_morph   &question_skshft   &kp SLASH
&magic 7 0     &kp Q             &kp X        &lpar_lt      &rpar_gt             &lt 6 BACKSPACE  &lt 2 ESCAPE  &kp DELETE  &caps_word  &lt 1 RETURN  &lt 3 SPACE          &kp MINUS    &de_ae        &de_ue       &kp SINGLE_QUOTE   &kp SEMICOLON
            >;
        };

        Symbols {
            bindings = <
&none  &none          &none        &none                 &none                                                                                                      &none           &none              &none             &none     &none
&none  &trans         &trans       &trans                &trans                 &trans                                                             &trans           &trans          &trans             &trans            &trans    &none
&none  &none          &kp AT_SIGN  &kp LESS_THAN         &kp GREATER_THAN       &kp PERCENT                                                        &kp PIPE         &kp AMPERSAND   &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &none     &none
&none  &kp CARET      &kp DOLLAR   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE                                                          &kp EXCLAMATION  &kp UNDERSCORE  &kp MINUS          &kp EQUAL         &kp PLUS  &none
&none  &kp BACKSLASH  &kp HASH     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE    &kp SEMICOLON  &none      &none  &none  &none  &none  &kp QUESTION     &kp ASTERISK    &trans             &trans            &trans    &none
&none  &trans         &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS               &kp BACKSPACE  &kp COLON  &none  &none  &mo 1  &none                   &none           &none              &none             &none     &none
            >;
        };

        NumMeh {
            bindings = <
&none                  &none                         &none                          &none                    &none                                                                                                   &none      &none      &none      &none            &none
&kp LC(LA(LG(GRAVE)))  &kp LC(LA(LG(N1)))            &kp LC(LA(LG(N2)))             &kp LC(LA(LG(N3)))       &kp LC(LA(LG(N4)))      &kp LC(LA(LG(N5)))                                               &none          &none      &none      &none      &none            &none
&none                  &kp LC(LA(LG(F12)))           &kp LC(LA(LG(W)))              &kp LC(LA(LG(L)))        &kp LC(LA(LG(D)))       &kp LC(LA(LG(P)))                                                &kp BACKSPACE  &kp KP_N7  &kp KP_N8  &kp KP_N9  &none            &none
&none                  &mt LCTRL LC(LA(LG(A)))       &mt LALT LC(LA(LG(S)))         &mt LSHFT LC(LA(LG(R)))  &mt LGUI LC(LA(LG(T)))  &kp LC(LA(LG(G)))                                                &kp KP_MINUS   &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS      &none
&none                  &kp LC(LA(LG(X)))             &kp LC(LA(LG(Z)))              &kp LC(LA(LG(K)))        &kp LC(LA(LG(C)))       &kp LC(LA(LG(V)))   &none  &none  &none  &trans  &trans  &trans  &kp KP_DIVIDE  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_MULTIPLY  &none
&none                  &kp LC(LA(LG(LEFT_BRACKET)))  &kp LC(LA(LG(RIGHT_BRACKET)))  &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS                       &none  &mo 2  &none  &trans  &trans  &trans                 &kp KP_N0  &kp COMMA  &kp DOT    &none            &none
            >;
        };

        FnKeys {
            bindings = <
&none  &none   &none    &none    &none                                                            &none     &none      &none     &kp C_PLAY_PAUSE  &kp C_BRIGHTNESS_INC
&none  &none   &none    &none    &none    &none                                            &none  &none     &none      &none     &none             &kp C_BRIGHTNESS_DEC
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none                                            &none  &none     &none      &none     &none             &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none                                            &none  &kp RGUI  &kp RSHFT  &kp RALT  &kp RCTRL         &none
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none  &none  &none  &none  &none  &none  &none  &none  &none     &none      &none     &none             &none
&none  &none   &none    &none    &none           &none  &none  &none  &none  &none  &mo 3         &none     &none      &none     &none             &none
            >;
        };

        Hyper {
            bindings = <
&trans  &trans   &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans  &mo 4   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Navigation_Left {
            bindings = <
&none  &none  &none     &none          &none                                                                            &none  &none  &none  &none  &none
&none  &none  &none     &kp PAGE_UP    &none      &none                                                          &none  &none  &none  &none  &none  &none
&none  &none  &kp BSPC  &kp UP         &kp DEL    &kp PAGE_UP                                                    &none  &none  &none  &none  &none  &none
&none  &none  &kp LEFT  &kp DOWN       &kp RIGHT  &kp PAGE_DOWN                                                  &none  &none  &none  &none  &none  &none
&none  &mo 5  &kp HOME  &kp PAGE_DOWN  &kp END    &none          &kp TAB    &none    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none     &none          &none                     &kp SPACE  &kp RET  &none  &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        Navigation {
            bindings = <
&none          &none                 &none                  &none                   &none                                                                                                          &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_BRIGHTNESS_INC
&kp LG(GRAVE)  &kp LG(N1)            &kp LG(N2)             &kp LG(N3)              &kp LG(N4)          &kp LG(N5)                                                                  &none          &none       &kp PAGE_UP        &none            &none             &kp C_BRIGHTNESS_DEC
&none          &kp LG(Q)             &kp LG(W)              &cmdhold L LC(LS(TAB))  &cmdhold D LC(TAB)  &cmdsfthold F LG(LS(G))                                                     &kp PAGE_UP    &kp BSPC    &kp UP             &kp DELETE       &none             &none
&none          &mt LCTRL LG(A)       &mt LALT LG(S)         &mt LSHFT LG(R)         &mt LGUI LG(T)      &cmdhold F LG(G)                                                            &kp PAGE_DOWN  &kp LEFT    &kp DOWN           &kp RIGHT        &none             &none
&none          &kp LG(X)             &kp LG(Z)              &kp LG(K)               &kp LG(C)           &kp LG(V)                &none  &none  &none  &none  &none       &kp TAB    &none          &kp HOME    &kp PAGE_DOWN      &kp END          &mo 6             &none
&none          &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &none                   &none                                        &mo 6  &none  &none  &none  &kp RETURN  &kp SPACE                 &none       &none              &none            &none             &none
            >;
        };

        Magic {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&mo 7        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };
    };
};
